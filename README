eLWA
====
This directory contains a collection of utilities for correlating LWA data with 
the VLA 4-band system.

setupRun.sh
-----------
Script to setup a directory for correlating an observation.  The script makes 
the directory and then creates symbolic links to all of the Python scripts needed.

createConfigFile.py
-------------------
Given a collection of LWA and VLA data files or a directory containing LWA/VLA 
data files, create a configuration file for superCorrelator.py.  The configuration 
file is written to standard out and contains:
 * the phase center, 
 * the file names with full path information,
 * the file types, 
 * the antenna locations in a LWA-centric reference frame, and
 * the polarizations

superCorrelator.py
------------------
Given a configuration file, correlate LWA and/or VLA according to that configuration.  
There are various command line options to control the FFT window size and the 
correlator dump time.  The output of superCorrelator.py is a collection of .npz files,
one for integration, that contain the visibility data.

fringeSearchZero.py
-------------------
Given a collection of .npz files generated by superCorrelator.py, perform a course 
fringe search to determine the antenna clock offsets.  Prints out the peak delay and 
fringe rate determined by the search for each baseline examined.

buildIDI.py
-----------
Given a collection of .npz files generated by superCorrelator.py, convert the .npz
files into one or more FITS IDI files for loading into AIPS.

vdifCheckTimetags.py
--------------------
Simple script to check the flow of time in a VDIF file.  This can be useful for checking
for missing frames/polarizations.

vdifSpectra.py
--------------
Simple script to generate spectra for each thread in a VDIF file.

vdifWaterfall.py
----------------
hdfWaterfall.py-style script to take in a VDIF file and build a HDF5 files containing
dynamic spectra.  This file can be viewed/interacted with using the plotHDF.py utility
in the LSL Commissioning extension.